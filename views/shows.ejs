<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Show</title>
    <script src="/javascripts/Show.js" ></script>
    <script type="text/javascripts" src="https://raw.github.com/mozilla/pdf.js/gh-pages/build/pdf.js"></script>
    <link rel="stylesheet" href="/stylesheets/style.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.6.347/pdf.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/pdfjs-dist@2/build/pdf.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/pdfjs-dist@2/build/pdf.worker.js"></script>
    <script src="https://cdn.jsdelivr.net/combine/npm/pdfjs-dist@2.9.359,npm/pdfjs-dist@2.9.359/build/pdf.min.js,npm/pdfjs-dist@2.9.359/build/pdf.worker.min.js"></script>
    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" 
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <!-- textUtils -->
    
</head>
<body>

    
  <div class="renderbox container-fluid">
      <div class="container-fluid toolbox position-sticky sticky-top d-flex flex-column justify-content-end">


        <div class="align-item-center">
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
                Add Signature 
              </button>
            <!-- <button type="button" id="scaleup"class="btn btn-info" >
                + 
              </button>
            <button type="button"id="scaledown" class="btn btn-info" >
                - 
            </button>
             -->
            <button id="download" class="btn btn-success" onclick="downloadit()">
              <a href="/down">Download</a> 
          
            </button>
            <button id="download" class="btn btn-success" onclick="downloadit()">save sign          
            </button>
            </div>
        </div>
              <!-- Modal -->
              <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                  <div class="modal-content">
                    <div class="modal-header">
                      <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                      <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body d-flex flex-row justify-content-center  ">
                      
                      <div class="wrapper">
                        <canvas id="signature-pad" class="signature-pad justify-content-center" width=400 height=200></canvas>
                      </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn-lg btn-warning  clear" id="clear">Clear</button>
                        <button type="button" class="btn-lg btn-primary mr-3 save"id="save">Save</button>
                        <button type="button" class="btn-lg btn-success " data-bs-dismiss="modal"id="apply">Apply</button>
                    </div>
                  </div>
                </div>
              </div>
              
           
            <div class="container position-sticky">
        <%- include('./sign.ejs') %>
    </div> 
</div>
    
    <div class="ch"></div>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js" integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js" integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.3/jspdf.min.js"></script>
<script src="https://html2canvas.hertzen.com/dist/html2canvas.js"></script>
</body>

<script>
const { PDFDocument } = PDFLib

console.log('<%=url%>')
var pdfDatas = atob('<%=url%>');

// function download(){
//   fetch("/download",
// {
//     headers: {
//       'Accept': 'application/json',
//       'Content-Type': 'application/json'
//     },
//     method: "POST",
//     body: JSON.stringify({a: 1, b: 2})
// })
// .then(function(res){ console.log(res) })
// .catch(function(res){ console.log(res) })
// }
renderPDF({data:pdfDatas},document.querySelector('.container'));

async function embedImages() {
			// Fetch JPEG image
      const jpgUrl = 'https://pdf-lib.js.org/assets/cat_riding_unicorn.jpg'
      const jpgImageBytes = await fetch(jpgUrl).then((res) => res.arrayBuffer())
      
      // Fetch PNG image
      const pngUrl = 'https://pdf-lib.js.org/assets/minions_banana_alpha.png'
      const pngImageBytes = await fetch(pngUrl).then((res) => res.arrayBuffer())

      const url = 'https://pdf-lib.js.org/assets/with_update_sections.pdf'
  const existingPdfBytes = await fetch(pdfDatas).then(res => res.arrayBuffer());

  // Load a PDFDocument from the existing PDF bytes
  const pdfDoc = await PDFDocument.load(existingPdfBytes);
      // Embed the JPG image bytes and PNG image bytes
      // let img = fs.readFileSync(data);
      const jpgImage = await pdfDoc.embedJpg(jpgImageBytes)
      const pngImage = await pdfDoc.embedPng(pngImageBytes)

      // Get the width/height of the JPG image scaled down to 25% of its original size
      const jpgDims = jpgImage.scale(0.25)

      // Get the width/height of the PNG image scaled down to 50% of its original size
      const pngDims = pngImage.scale(0.5)

      // Add a blank page to the document
      const pages = pdfDoc.getPages()
  const firstPage = pages[0]
      // Draw the JPG image in the center of the page
     firstPage.drawImage(jpgImage, {
        x: firstPage.getWidth() / 2 - jpgDims.width / 2,
        y: firstPage.getHeight() / 2 - jpgDims.height / 2,
        width: jpgDims.width,
        height: jpgDims.height,
      })

      // Draw the PNG image near the lower right corner of the JPG image
      firstPage.drawImage(pngImage, {
        x: firstPage.getWidth() / 2 - pngDims.width / 2 + 75,
        y: firstPage.getHeight() / 2 - pngDims.height,
        width: pngDims.width,
        height: pngDims.height,
      })

      // Serialize the PDFDocument to bytes (a Uint8Array)
      const pdfBytes = await pdfDoc.save()

			// Trigger the browser to download the PDF document
      download(pdfBytes, "pdf-lib_image_embedding_example.pdf", "application/pdf");
    }
</script>

</html>
</html>